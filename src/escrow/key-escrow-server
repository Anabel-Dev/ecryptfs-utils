#!/usr/bin/env python

import sys
import getopt
import base64
from ZSI import dispatch

default_port = 8080
default_conf_file_full_path = "/etc/key-escrow-server.conf"

__doc__ = '''
Usage: key-escrow-server <-v|--verbose> <-c [configuration file]> \
                         <-p [listen port]> <-k [keystore directory]>
'''

def hello():
    return "Hello, world"

def skb(args):
    return 0

def store_key_blob(args):
    args_items = args.items()
    if len(args_items[0][1]) == 24:
        b64sig = args_items[0][1]
        b64blob = args_items[1][1]
    else:
        b64sig = args_items[1][1]
        b64blob = args_items[0][1]
    sig = base64.b64decode(b64sig).rstrip('\0')
    blob = base64.b64decode(b64blob)
    filename = unicode(sig)
    fh = open(filename, "w")
    fh.write(b64blob)
    fh.close()
    return 0

def fetch_key_blob(args):
    b64sig = args
    sig = base64.b64decode(b64sig)
    filename = "%s" % sig
    fh = open(filename, "r")
    b64blob = fh.read()
    fh.close()
    return b64blob

class ServerStat:
    def __init__(self, verbosity=0, port=default_port, \
                     conf_file_full_path=default_conf_file_full_path):
        self.port = port
        return None

class Server:
    def __init__(self, server_stat):
        self.server_stat = server_stat
        return None

    def run(self):
        print "Server initialized"
        print "Listening on port [%d]" % self.server_stat.port
        dispatch.AsServer(port=8080, rpc=True)

def main():
    server_stat = ServerStat()
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hvp:", ["help", "verbose", \
                                                              "port="])
    except getopt.error, msg:
        print msg
        print "for help use --help"
        sys.exit(2)
    for o, a in opts:
        if o in ("-h", "--help"):
            print __doc__
            sys.exit(0)
        elif o in ("-p", "--port"):
            server_stat.port = a
        elif o in ("-v", "--verbose"):
            server_stat.verbosity = 1
    for arg in args:
        print "Ignoring command line parameter: [%s]" % arg
    server = Server(server_stat)
    server.run()

if __name__ == "__main__":
    main()
