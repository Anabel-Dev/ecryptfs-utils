.TH ecryptfs-setup-private 1 2008-07-21 ecryptfs-utils "eCryptfs"
.SH NOM
ecryptfs-setup-private \- met en place un répertoire privé eCryptfs.

.SH SYNOPSIS
.BI "ecryptfs-setup-private [\-\-username USER] [\-\-loginpass LOGINPASS] [\-\-mountpass MOUNTPASS]"

.SH OPTIONS
Options disponibles pour la commande \fBecryptfs-setup-private\fP :
.TP
.B \-\-username USER
Utilisateur pour lequel on veut créer un répertoire privé, utilisatur actuel s'il n'est pas nommé
.TP
.B \-\-loginpass LOGINPASS
Mot de passe système de l'utilisateur, utilisé pour emballer le mot de passe de montage (MOUNTPASS), sera demandé s'il n'est pas fourni en option
.TP
.B \-\-mountpass MOUNTPASS
Clef pour monter le répertoire ecryptfs, 16 bytes par défaut si /dev/urandom est omis

.SH DESCRIPTION
\fBecryptfs-setup-private\fP est un programme pour mettre en oeuvre un point de montage chiffré pour un utilisateur lambda (différent de root).

Faites attention à échapper correctement vos paramètres selon les méta-caractères de votre shell mais aussi encadrez vos paramètres par des guillemets si nécessaire. N'importe quel paramètre peut être:

  1) exporté comme variable d'environnement
  2) specifié en ligne de commande
  3) laissé vide, dans ce cas le programme vous le demandera en temps voulu

\fBL'utilisateur DEVRAIT GARDER UNE TRACE DE LA CLEF DE MONTAGE DANS UN ENDROIT SUR. Si cette clef de montage est perdue ou oubliée IL N'Y A PAS DE MOYEN DE DÉCHIFFRER LES DONN2ES.\fP

En utilisant les valeurs USER, MOUNTPASS, et LOGINPASS, \fBecryptfs-setup-private\fP fera les opérations suivantes:
  - Création ~/.Private (permission 700)
  - Création ~/Private (permission 500)
  - Sauvegarde de clefs emballées existantes
  - Utilisation du LOGINPASS pour emballer et chiffrer MOUNTPASS
  - Écriture de ~/.ecryptfs/wrapped-passphrase
  - Ajout de la clef au trousseau de clef
  - Écriture de la signature de la clef dans ~/.ecryptfs/Private.sig
  - Test du point de montage chiffré avec quelques lectures/écritures

L'administrateur système peut ajouter le module pam_ecryptfs.so à la pile PAM qui utilisera automatiquement le mot de passe de connexion pour déballer la clef de montage, ajoutera la clef au trousseau de clefs du noyau de l'utilisateur et montera automatiquement le répertoire. Voir \fPpam_ecryptfs\fP(8).

.SH FICHIERS
\fI~/.ecryptfs/auto-mount\fP

\fI~/.Private\fP - répertoire sous-jacent contenant les données chiffrées 

\fI~/Private\fP - point de montage contenant les données chiffrées (lorsque le montage a été effectué)

\fI~/.ecryptfs/Private.sig\fP - fichier contenant la signature de la clef du point de montage

\fI~/.ecryptfs/wrapped-passphrase\fP - fichier contenant la clef du point de montage, emballée grâce au mot de passe de connexion

.SH VOIR AUSSI
.PD 0
.TP
\fBecryptfs-rewrap-passphrase\fP(1), \fBmount.ecryptfs_private\fP(1), \fBpam_ecryptfs\fP(8), \fBumount.ecryptfs_private\fP(1)

.TP
\fI/usr/share/doc/ecryptfs-utils/ecryptfs-faq.html\fP

.TP
\fIhttp://ecryptfs.sourceforge.net/\fP
.PD

.SH AUTEUR
Cette page de manuel a été écrite par Dustin Kirkland <kirkland@canonical.com> pour les systèmes Ubuntu (mais peut-être utilisés our d'autres systèmes).  Traduction par James Dupin <james@dupin.info>. Permission est donnée de copier, distribuer et/ou modifier ce document dans les termes de la licence publique générale GNU (GNU General Public License), version 2 ou toute autre version plus récente publiée par la Free Software Foundation.

Dans les systèmes Debian, le texte complet de la licence publique générale GNU (GNU General Public License) se trouve dans /usr/share/common-licenses/GPL.
